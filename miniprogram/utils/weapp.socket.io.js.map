{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./support/noop.js","webpack:///(webpack)/buildin/global.js","webpack:///../weapp.engine.io/node_modules/engine.io-parser/lib/browser.js","webpack:///../weapp.engine.io/node_modules/component-inherit/index.js","webpack:///../weapp.engine.io/node_modules/parseqs/index.js","webpack:///../weapp.engine.io/node_modules/component-emitter/index.js","webpack:///../weapp.engine.io/lib/transport.js","webpack:///./node_modules/component-emitter/index.js","webpack:///./node_modules/socket.io-parser/index.js","webpack:///./node_modules/component-bind/index.js","webpack:///./lib/on.js","webpack:///./lib/socket.js","webpack:///../weapp.engine.io/node_modules/yeast/index.js","webpack:///../weapp.engine.io/lib/transports/index.js","webpack:///./lib/manager.js","webpack:///./node_modules/socket.io-parser/is-buffer.js","webpack:///./node_modules/socket.io-parser/node_modules/isarray/index.js","webpack:///./node_modules/backo2/index.js","webpack:///./node_modules/indexof/index.js","webpack:///./node_modules/has-binary2/node_modules/isarray/index.js","webpack:///./node_modules/has-binary2/index.js","webpack:///./node_modules/parseqs/index.js","webpack:///./node_modules/to-array/index.js","webpack:///../weapp.engine.io/node_modules/parseuri/index.js","webpack:///../weapp.engine.io/node_modules/indexof/index.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/node-libs-browser/node_modules/buffer/index.js","webpack:///../weapp.engine.io/lib/transports/websocket-weapp.js","webpack:///../weapp.engine.io/node_modules/blob/index.js","webpack:///../weapp.engine.io/node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","webpack:///(webpack)/buildin/module.js","webpack:///../weapp.engine.io/node_modules/engine.io-parser/lib/utf8.js","webpack:///../weapp.engine.io/node_modules/after/index.js","webpack:///../weapp.engine.io/node_modules/arraybuffer.slice/index.js","webpack:///../weapp.engine.io/node_modules/isarray/index.js","webpack:///../weapp.engine.io/node_modules/has-binary2/index.js","webpack:///../weapp.engine.io/node_modules/engine.io-parser/lib/keys.js","webpack:///../weapp.engine.io/lib/transports/polling.js","webpack:///../weapp.engine.io/lib/transports/polling-xhr-weapp.js","webpack:///../weapp.engine.io/lib/socket.js","webpack:///../weapp.engine.io/lib/index.js","webpack:///./node_modules/socket.io-parser/binary.js","webpack:///./node_modules/parseuri/index.js","webpack:///./lib/url.js","webpack:///./lib/index.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","g","this","Function","eval","e","global","base64encoder","keys","hasBinary","sliceBuffer","after","utf8","ArrayBuffer","isAndroid","navigator","test","userAgent","isPhantomJS","dontSendBlobs","protocol","packets","open","close","ping","pong","message","upgrade","noop","packetslist","err","type","data","Blob","map","ary","each","done","result","Array","length","next","eachWithIndex","el","cb","error","msg","encodePacket","packet","supportsBinary","utf8encode","callback","undefined","buffer","encodeBase64Packet","contentArray","Uint8Array","resultBuffer","byteLength","encodeArrayBuffer","fr","FileReader","onload","readAsArrayBuffer","encodeBlobAsArrayBuffer","blob","encodeBlob","base64","encodeBase64Object","encoded","encode","String","strict","b64data","b64","split","readAsDataURL","fromCharCode","apply","typed","basic","btoa","decodePacket","binaryType","utf8decode","charAt","decodeBase64Packet","substr","decode","tryDecode","Number","substring","rest","encodePayload","isBinary","encodePayloadAsBlob","encodePayloadAsArrayBuffer","doneCallback","setLengthHeader","results","join","decodePayload","decodePayloadAsBinary","chr","encodedPackets","totalLength","reduce","acc","len","toString","resultArray","bufferIndex","forEach","isString","ab","view","charCodeAt","lenStr","parseInt","binaryIdentifier","size","lengthAry","bufferTail","buffers","tailArray","msgLength","push","total","b","fn","constructor","obj","str","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","Emitter","key","mixin","on","addEventListener","event","_callbacks","once","off","arguments","removeListener","removeAllListeners","removeEventListener","callbacks","splice","emit","args","slice","listeners","hasListeners","parser","debug","Transport","opts","path","hostname","port","secure","query","timestampParam","timestampRequests","readyState","agent","socket","enablesXDR","pfx","passphrase","cert","ca","ciphers","rejectUnauthorized","forceNode","extraHeaders","localAddress","onError","desc","Error","description","doOpen","doClose","onClose","send","write","onOpen","writable","onData","onPacket","binary","isArray","isBuf","Encoder","types","CONNECT","DISCONNECT","EVENT","ACK","ERROR","BINARY_EVENT","BINARY_ACK","Decoder","ERROR_PACKET","encodeAsString","attachments","nsp","id","payload","JSON","stringify","tryStringify","reconstructor","BinaryReconstructor","reconPack","removeBlobs","bloblessData","deconstruction","deconstructPacket","pack","unshift","encodeAsBinary","add","buf","parse","tryParse","isPayloadValid","decodeString","takeBinaryData","destroy","finishedReconstruction","binData","reconstructPacket","concat","ev","toArray","bind","parseqs","hasBin","Socket","events","connect","connect_error","connect_timeout","connecting","disconnect","reconnect","reconnect_attempt","reconnect_failed","reconnect_error","reconnecting","io","json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","flags","autoConnect","subEvents","subs","onopen","options","compress","pop","onclose","reason","onpacket","onconnect","onevent","onack","ondisconnect","ack","self","sent","emitBuffered","prev","alphabet","seed","num","Math","floor","yeast","now","Date","decoded","XHR","websocket","polling","xdomain","xscheme","eio","indexOf","Backoff","has","Manager","uri","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","min","max","jitter","timeout","lastPing","encoding","packetBuffer","_parser","encoder","decoder","emitAll","updateSocketIds","generateId","engine","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","attempts","skipReconnect","openSub","errorSub","cleanup","timer","setTimeout","clearTimeout","onping","onpong","ondata","ondecoded","onerror","onConnecting","index","processPacketQueue","shift","subsLength","reset","delay","duration","onreconnect","attempt","withNativeBuffer","Buffer","isBuffer","withNativeArrayBuffer","isView","arr","ms","factor","pow","rand","random","deviation","withNativeBlob","withNativeFile","File","toJSON","list","array","re","parts","src","replace","exec","source","host","authority","ipv6uri","read","offset","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","isNaN","log","LN2","placeHoldersCount","toByteArray","tmp","placeHolders","Arr","L","revLookup","fromByteArray","uint8","extraBytes","output","len2","encodeChunk","lookup","code","start","end","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","arg","encodingOrOffset","allocUnsafe","from","TypeError","byteOffset","fromArrayLike","fromArrayBuffer","string","isEncoding","actual","fromString","checked","copy","val","fromObject","assertSize","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","swap","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","j","hexWrite","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","utf8Slice","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","Symbol","species","fill","allocUnsafeSlow","_isBuffer","compare","x","y","pos","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","leadSurrogate","trim","stringtrim","base64clean","dst","inherit","WS","forceBase64","perMessageDeflate","protocols","headers","params","url","header","method","success","socketTaskId","fail","wx","connectSocket","addEventListeners","onSocketOpen","onSocketClose","onSocketMessage","onSocketError","sendSocketMessage","schema","BlobBuilder","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","blobSupported","blobSupportsArrayBufferView","blobBuilderSupported","append","getBlob","mapArrayBufferViews","chunk","BlobBuilderConstructor","bb","BlobConstructor","chars","arraybuffer","encoded1","encoded2","encoded3","encoded4","bufferLength","webpackPolyfill","deprecate","paths","children","__WEBPACK_AMD_DEFINE_RESULT__","freeExports","freeGlobal","byteCount","byteIndex","stringFromCharCode","ucs2decode","extra","counter","checkScalarValue","toUpperCase","createByte","encodeCodePoint","symbol","readContinuationByte","continuationByte","decodeSymbol","byte1","version","byteString","ucs2encode","count","err_cb","bail","proxy","abv","ii","Polling","poll","pause","onPause","doPoll","callbackfn","doWrite","sid","requestTimeout","Request","onLoad","create","request","req","sendXhr","pollXhr","onSuccess","fromError","transports","parseuri","forceJSONP","jsonp","transportOptions","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","onlyBinaryUpgrades","threshold","upgrades","pingInterval","pingTimeout","pingIntervalTimer","pingTimeoutTimer","priorWebsocketSuccess","createTransport","clone","EIO","transport","setTransport","onDrain","probe","failed","onTransportOpen","upgradeLosesBinary","upgrading","flush","freezeTransport","onTransportClose","onupgrade","to","onHandshake","setPing","filterUpgrades","onHeartbeat","sendPacket","waitForUpgrade","cleanupAndClose","filteredUpgrades","packetData","_deconstructPacket","placeholder","_placeholder","newData","_reconstructPacket","pendingBlobs","_removeBlobs","curKey","containingObject","fileReader","loc","location","href","cache","managers","sameNamespace","forceNew","multiplex"],"mappings":"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","file":"weapp.socket.io.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 46);\n","module.exports = function() {\n  return function() {}\n}\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","/**\n * Module dependencies.\n */\n\nvar keys = require('./keys');\nvar hasBinary = require('has-binary2');\nvar sliceBuffer = require('arraybuffer.slice');\nvar after = require('after');\nvar utf8 = require('./utf8');\n\nvar base64encoder;\nif (global && global.ArrayBuffer) {\n  base64encoder = require('base64-arraybuffer');\n}\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if (typeof utf8encode === 'function') {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (Blob && data instanceof global.Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    packet.data = fr.result;\n    exports.encodePacket(packet, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (Blob && packet.data instanceof global.Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += global.btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  }\n  // String data\n  if (typeof data === 'string') {\n    if (data.charAt(0) === 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n      if (data === false) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data, { strict: false });\n  } catch (e) {\n    return false;\n  }\n  return data;\n}\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!base64encoder) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data !== 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data === '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = '', n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (chr !== ':') {\n      length += chr;\n      continue;\n    }\n\n    if (length === '' || (length != (n = Number(length)))) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    msg = data.substr(i + 1, n);\n\n    if (length != msg.length) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    if (msg.length) {\n      packet = exports.decodePacket(msg, binaryType, false);\n\n      if (err.type === packet.type && err.data === packet.data) {\n        // parser error in individual packet - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      var ret = callback(packet, i + n, l);\n      if (false === ret) return;\n    }\n\n    // advance cursor\n    i += n;\n    length = '';\n  }\n\n  if (length !== '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] === 255) break;\n\n      // 310 = char length of Number.MAX_VALUE\n      if (msgLength.length > 310) {\n        return callback(err, 0, 1);\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n","\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};","/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\r\n\r\nexports.encode = function (obj) {\r\n  var str = '';\r\n\r\n  for (var i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      if (str.length) str += '&';\r\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n    }\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\r\n\r\nexports.decode = function(qs){\r\n  var qry = {};\r\n  var pairs = qs.split('&');\r\n  for (var i = 0, l = pairs.length; i < l; i++) {\r\n    var pair = pairs[i].split('=');\r\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n  }\r\n  return qry;\r\n};\r\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","/**\n * Module dependencies.\n */\n\nvar parser = require('engine.io-parser')\nvar Emitter = require('component-emitter')\nvar debug = require('debug')('engine.io-client:transport:')\n/**\n * Module exports.\n */\n\nmodule.exports = Transport\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport(opts) {\n  this.path = opts.path\n  this.hostname = opts.hostname\n  this.port = opts.port\n  this.secure = opts.secure\n  this.query = opts.query\n  this.timestampParam = opts.timestampParam\n  this.timestampRequests = opts.timestampRequests\n  this.readyState = ''\n  this.agent = opts.agent || false\n  this.socket = opts.socket\n  this.enablesXDR = opts.enablesXDR\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx\n  this.key = opts.key\n  this.passphrase = opts.passphrase\n  this.cert = opts.cert\n  this.ca = opts.ca\n  this.ciphers = opts.ciphers\n  this.rejectUnauthorized = opts.rejectUnauthorized\n  this.forceNode = opts.forceNode\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders\n  this.localAddress = opts.localAddress\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype)\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function(msg, desc) {\n  var err = new Error(msg)\n  err.type = 'TransportError'\n  err.description = desc\n  this.emit('error', err)\n  return this\n}\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function() {\n  debug('called open func: ', this.readyState)\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening'\n    this.doOpen()\n  }\n\n  return this\n}\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function() {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose()\n    this.onClose()\n  }\n\n  return this\n}\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function(packets) {\n  if ('open' === this.readyState) {\n    this.write(packets)\n  } else {\n    throw new Error('Transport not open')\n  }\n}\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function() {\n  debug('wx socket open called transport onOpen')\n  this.readyState = 'open'\n  this.writable = true\n  this.emit('open')\n}\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function(data) {\n  debug('transport onData: ', data)\n  var packet = parser.decodePacket(data, this.socket.binaryType)\n  debug('decoded packet: ', packet)\n  this.onPacket(packet)\n}\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function(packet) {\n  this.emit('packet', packet)\n}\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function() {\n  this.readyState = 'closed'\n  this.emit('close')\n}\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar binary = require('./binary');\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'ACK',\n  'ERROR',\n  'BINARY_EVENT',\n  'BINARY_ACK'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\nvar ERROR_PACKET = exports.ERROR + '\"encode error\"';\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    encodeAsBinary(obj, callback);\n  } else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n\n  // first is type\n  var str = '' + obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    str += obj.attachments + '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' !== obj.nsp) {\n    str += obj.nsp + ',';\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    var payload = tryStringify(obj.data);\n    if (payload !== false) {\n      str += payload;\n    } else {\n      return ERROR_PACKET;\n    }\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\nfunction tryStringify(str) {\n  try {\n    return JSON.stringify(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an ecoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if (typeof obj === 'string') {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  }\n  else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  }\n  else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var i = 0;\n  // look up type\n  var p = {\n    type: Number(str.charAt(0))\n  };\n\n  if (null == exports.types[p.type]) {\n    return error('unknown packet type ' + p.type);\n  }\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n    var buf = '';\n    while (str.charAt(++i) !== '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' === str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' === c) break;\n      p.nsp += c;\n      if (i === str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i === str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    var payload = tryParse(str.substr(i));\n    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));\n    if (isPayloadValid) {\n      p.data = payload;\n    } else {\n      return error('invalid payload');\n    }\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\nfunction tryParse(str) {\n  try {\n    return JSON.parse(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length === this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(msg) {\n  return {\n    type: exports.ERROR,\n    data: 'parser error: ' + msg\n  };\n}\n","/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n","\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on (obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function () {\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n","\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar parseqs = require('parseqs');\nvar hasBin = require('has-binary2');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket (io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  this.flags = {};\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function () {\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = {\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n    data: args\n  };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  this.flags = {};\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n      debug('sending connect packet with query %s', query);\n      this.packet({type: parser.CONNECT, query: query});\n    } else {\n      this.packet({type: parser.CONNECT});\n    }\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function (packet) {\n  if (packet.nsp !== this.nsp) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    self.packet({\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function (compress) {\n  this.flags.compress = compress;\n  return this;\n};\n\n/**\n * Sets the binary flag\n *\n * @param {Boolean} whether the emitted data contains binary\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.binary = function (binary) {\n  this.flags.binary = binary;\n  return this;\n};\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","/**\n * Module dependencies\n */\n// var XHR = require('./polling-xhr')\nvar XHR = require('./polling-xhr-weapp')\nvar websocket = require('./websocket-weapp')\n/**\n * Export transports.\n */\n\nexports.polling = polling\nexports.websocket = websocket\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling(opts) {\n  var xhr\n  var xd = false\n  var xs = false\n\n  opts.xdomain = xd\n  opts.xscheme = xs\n\n  return new XHR(opts)\n}\n","\n/**\n * Module dependencies.\n */\n\nvar eio = require('weapp.engine.io');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:manager');\nvar indexOf = require('indexof');\nvar Backoff = require('backo2');\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager (uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' === typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  var _parser = opts.parser || parser;\n  this.encoder = new _parser.Encoder();\n  this.decoder = new _parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.generateId(nsp);\n    }\n  }\n};\n\n/**\n * generate `socket.id` for the given `nsp`\n *\n * @param {String} nsp\n * @return {String}\n * @api private\n */\n\nManager.prototype.generateId = function (nsp) {\n  return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function () {\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.generateId(nsp);\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting event is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting () {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n\n  var subsLength = this.subs.length;\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n","\nmodule.exports = isBuf;\n\nvar withNativeBuffer = typeof global.Buffer === 'function' && typeof global.Buffer.isBuffer === 'function';\nvar withNativeArrayBuffer = typeof global.ArrayBuffer === 'function';\n\nvar isView = (function () {\n  if (withNativeArrayBuffer && typeof global.ArrayBuffer.isView === 'function') {\n    return global.ArrayBuffer.isView;\n  } else {\n    return function (obj) { return obj.buffer instanceof global.ArrayBuffer; };\n  }\n})();\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (withNativeBuffer && global.Buffer.isBuffer(obj)) ||\n          (withNativeArrayBuffer && (obj instanceof global.ArrayBuffer || isView(obj)));\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/* global Blob File */\n\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof global.Blob === 'function' || toString.call(global.Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof global.File === 'function' || toString.call(global.File) === '[object FileConstructor]';\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary (obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if ((typeof global.Buffer === 'function' && global.Buffer.isBuffer && global.Buffer.isBuffer(obj)) ||\n     (typeof global.ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\n     (withNativeBlob && obj instanceof Blob) ||\n     (withNativeFile && obj instanceof File)\n    ) {\n    return true;\n  }\n\n  // see: https://github.com/Automattic/has-binary/pull/4\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\r\n\r\nexports.encode = function (obj) {\r\n  var str = '';\r\n\r\n  for (var i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      if (str.length) str += '&';\r\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n    }\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\r\n\r\nexports.decode = function(qs){\r\n  var qry = {};\r\n  var pairs = qs.split('&');\r\n  for (var i = 0, l = pairs.length; i < l; i++) {\r\n    var pair = pairs[i].split('=');\r\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n  }\r\n  return qry;\r\n};\r\n","module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n","/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\r\n\r\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\nvar parts = [\r\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n];\r\n\r\nmodule.exports = function parseuri(str) {\r\n    var src = str,\r\n        b = str.indexOf('['),\r\n        e = str.indexOf(']');\r\n\r\n    if (b != -1 && e != -1) {\r\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n    }\r\n\r\n    var m = re.exec(str || ''),\r\n        uri = {},\r\n        i = 14;\r\n\r\n    while (i--) {\r\n        uri[parts[i]] = m[i] || '';\r\n    }\r\n\r\n    if (b != -1 && e != -1) {\r\n        uri.source = src;\r\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n        uri.ipv6uri = true;\r\n    }\r\n\r\n    return uri;\r\n};\r\n","\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = ((uint8[i] << 16) & 0xFF0000) + ((uint8[i + 1] << 8) & 0xFF00) + (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var Transport = require('../transport')\nvar parser = require('engine.io-parser')\nvar parseqs = require('parseqs')\nvar inherit = require('component-inherit')\nvar yeast = require('yeast')\nvar Buffer = require('buffer').Buffer\nvar debug = require('debug')('engine.io-client:websocket-weapp')\n\nmodule.exports = WS\n\nfunction WS(opts) {\n  var forceBase64 = opts && opts.forceBase64\n  if (forceBase64) {\n    this.supportsBinary = false\n  }\n  this.perMessageDeflate = opts.perMessageDeflate\n  this.protocols = opts.protocols\n\n  debug('new WS: ', opts)\n  Transport.call(this, opts)\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport)\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket'\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function() {\n  var uri = this.uri()\n  var protocols = this.protocols\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate,\n  }\n\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders\n  }\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress\n  }\n\n  const self = this\n  const params = {\n    url: uri,\n    protocols,\n    header: opts.headers,\n    method: opts.method || 'GET',\n    success: function(res) {\n      debug('websocket-weapp connected success.', res)\n      this.socketTaskId = res.socketTaskId\n    },\n    fail: function(err) {\n      this.emit('error', err)\n    },\n  }\n  debug('wx connect params: ', params)\n  wx.connectSocket(params)\n\n  this.addEventListeners()\n}\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function() {\n  var self = this\n\n  wx.onSocketOpen(function() {\n    debug('wx socket open')\n    self.onOpen()\n  })\n  wx.onSocketClose(function() {\n    self.onClose()\n  })\n  wx.onSocketMessage(function(ev) {\n    debug('wx socket on message.')\n    self.onData(ev.data)\n  })\n  wx.onSocketError(function(e) {\n    debug('wx socket error: ', e)\n    self.onError('websocket error', e)\n  })\n}\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function(packets) {\n  debug('write: ', packets)\n\n  var self = this\n  this.writable = false\n\n  var total = packets.length\n  for (var i = 0, l = total; i < l; i++) {\n    ;(function(packet) {\n      parser.encodePacket(packet, self.supportsBinary, function(data) {\n        debug('encoded data: ', data)\n        wx.sendSocketMessage({\n          data: data,\n          success: function(res) {\n            debug('write success: ', res)\n          },\n          fail: function(err) {\n            debug('write fail: ', err)\n          },\n        })\n        --total || done()\n      })\n    })(packets[i])\n  }\n\n  function done() {\n    self.emit('flush')\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function() {\n      self.writable = true\n      self.emit('drain')\n    }, 0)\n  }\n}\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function() {\n  Transport.prototype.onClose.call(this)\n}\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function() {\n  if (typeof this.socketTaskId !== 'undefined') {\n    wx.onSocketClose(function(res) {\n      debug('websocket-weapp closed.', res)\n    })\n  }\n}\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function() {\n  var query = this.query || {}\n  var schema = this.secure ? 'wss' : 'ws'\n  var port = ''\n\n  // avoid port if default for schema\n  if (\n    this.port &&\n    (('wss' === schema && Number(this.port) !== 443) ||\n      ('ws' === schema && Number(this.port) !== 80))\n  ) {\n    port = ':' + this.port\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast()\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1\n  }\n\n  query = parseqs.encode(query)\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1\n  return (\n    schema +\n    '://' +\n    (ipv6 ? '[' + this.hostname + ']' : this.hostname) +\n    port +\n    this.path +\n    query\n  )\n}\n","/**\n * Create a blob builder even when vendor prefixes exist\n */\n\nvar BlobBuilder = global.BlobBuilder\n  || global.WebKitBlobBuilder\n  || global.MSBlobBuilder\n  || global.MozBlobBuilder;\n\n/**\n * Check if Blob constructor is supported\n */\n\nvar blobSupported = (function() {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if Blob constructor supports ArrayBufferViews\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\n */\n\nvar blobSupportsArrayBufferView = blobSupported && (function() {\n  try {\n    var b = new Blob([new Uint8Array([1,2])]);\n    return b.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if BlobBuilder is supported\n */\n\nvar blobBuilderSupported = BlobBuilder\n  && BlobBuilder.prototype.append\n  && BlobBuilder.prototype.getBlob;\n\n/**\n * Helper function that maps ArrayBufferViews to ArrayBuffers\n * Used by BlobBuilder constructor and old browsers that didn't\n * support it in the Blob constructor.\n */\n\nfunction mapArrayBufferViews(ary) {\n  for (var i = 0; i < ary.length; i++) {\n    var chunk = ary[i];\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer;\n\n      // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      ary[i] = buf;\n    }\n  }\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary);\n\n  for (var i = 0; i < ary.length; i++) {\n    bb.append(ary[i]);\n  }\n\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\n};\n\nfunction BlobConstructor(ary, options) {\n  mapArrayBufferViews(ary);\n  return new Blob(ary, options || {});\n};\n\nmodule.exports = (function() {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n})();\n","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(){\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n  // Use a lookup table to find the index.\n  var lookup = new Uint8Array(256);\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i+1)];\n      encoded3 = lookup[base64.charCodeAt(i+2)];\n      encoded4 = lookup[base64.charCodeAt(i+3)];\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})();\n","module.exports = function(module) {\r\n\tif (!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n","/*! https://mths.be/utf8js v2.1.2 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint, strict) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tif (strict) {\n\t\t\t\tthrow Error(\n\t\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t\t' is not a scalar value'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint, strict) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tif (!checkScalarValue(codePoint, strict)) {\n\t\t\t\tcodePoint = 0xFFFD;\n\t\t\t}\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint, strict);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol(strict) {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol(strict)) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar utf8 = {\n\t\t'version': '2.1.2',\n\t\t'encode': utf8encode,\n\t\t'decode': utf8decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn utf8;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = utf8;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tvar object = {};\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\tfor (var key in utf8) {\n\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.utf8 = utf8;\n\t}\n\n}(this));\n","module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/* global Blob File */\n\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof global.Blob === 'function' || toString.call(global.Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof global.File === 'function' || toString.call(global.File) === '[object FileConstructor]';\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary (obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if ((typeof global.Buffer === 'function' && global.Buffer.isBuffer && global.Buffer.isBuffer(obj)) ||\n     (typeof global.ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\n     (withNativeBlob && obj instanceof Blob) ||\n     (withNativeFile && obj instanceof File)\n    ) {\n    return true;\n  }\n\n  // see: https://github.com/Automattic/has-binary/pull/4\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport')\nvar parseqs = require('parseqs')\nvar parser = require('engine.io-parser')\nvar inherit = require('component-inherit')\nvar yeast = require('yeast')\nvar debug = require('debug')('engine.io-client:polling')\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling(opts) {\n  var forceBase64 = opts && opts.forceBase64\n  if (forceBase64) {\n    this.supportsBinary = false\n  }\n  Transport.call(this, opts)\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport)\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling'\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function() {\n  this.poll()\n}\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function(onPause) {\n  var self = this\n\n  this.readyState = 'pausing'\n\n  function pause() {\n    debug('paused')\n    self.readyState = 'paused'\n    onPause()\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause')\n      total++\n      this.once('pollComplete', function() {\n        debug('pre-pause polling complete')\n        --total || pause()\n      })\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause')\n      total++\n      this.once('drain', function() {\n        debug('pre-pause writing complete')\n        --total || pause()\n      })\n    }\n  } else {\n    pause()\n  }\n}\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function() {\n  debug('polling')\n  this.polling = true\n  this.doPoll()\n  this.emit('poll')\n}\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function(data) {\n  var self = this\n  debug('polling got data %s', data)\n  var callback = function(packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState) {\n      self.onOpen()\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' === packet.type) {\n      self.onClose()\n      return false\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet)\n  }\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback)\n\n  // if an event did not trigger closing\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false\n    this.emit('pollComplete')\n\n    if ('open' === this.readyState) {\n      this.poll()\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState)\n    }\n  }\n}\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function() {\n  var self = this\n\n  function close() {\n    debug('writing close packet')\n    self.write([{ type: 'close' }])\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing')\n    close()\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close')\n    this.once('open', close)\n  }\n}\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function(packets) {\n  var self = this\n  this.writable = false\n  var callbackfn = function() {\n    self.writable = true\n    self.emit('drain')\n  }\n\n  parser.encodePayload(packets, this.supportsBinary, function(data) {\n    self.doWrite(data, callbackfn)\n  })\n}\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function() {\n  var query = this.query || {}\n  var schema = this.secure ? 'https' : 'http'\n  var port = ''\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast()\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1\n  }\n\n  query = parseqs.encode(query)\n\n  // avoid port if default for schema\n  if (\n    this.port &&\n    (('https' === schema && Number(this.port) !== 443) ||\n      ('http' === schema && Number(this.port) !== 80))\n  ) {\n    port = ':' + this.port\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1\n  return (\n    schema +\n    '://' +\n    (ipv6 ? '[' + this.hostname + ']' : this.hostname) +\n    port +\n    this.path +\n    query\n  )\n}\n","var Polling = require('./polling')\nvar Emitter = require('component-emitter')\nvar inherit = require('component-inherit')\nvar debug = require('debug')('engine.io-client:polling-xhr-weapp')\n\nmodule.exports = XHR\n\nfunction XHR(opts) {\n  Polling.call(this, opts)\n  this.requestTimeout = opts.requestTimeout\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling)\n\nXHR.prototype.request = function(opts) {\n  opts = opts || {}\n  opts.uri = this.uri()\n\n  debug('new XHR: ', opts)\n\n  return new Request(opts)\n}\n\n/**\n * Sends data.\n * @param {*} data\n * @param {*} fn\n */\nXHR.prototype.doWrite = function(data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary })\n  var self = this\n  req.on('success', fn)\n  req.on('error', function(err) {\n    self.onError('xhr post error', err)\n  })\n  this.sendXhr = req\n}\n\n/**\n * Starts a poll cycle.\n */\nXHR.prototype.doPoll = function() {\n  debug('xhr poll')\n  var req = this.request()\n  var self = this\n  req.on('data', function(data) {\n    self.onData(data)\n  })\n  req.on('error', function(err) {\n    self.onError('xhr poll error', err)\n  })\n  this.pollXhr = req\n}\n\n/**\n *\n * Request constructor\n * @param {*} opts\n */\nfunction Request(opts) {\n  this.method = opts.method || 'GET'\n  this.uri = opts.uri\n  this.data = undefined !== opts.data ? opts.data : null\n  this.requestTimeout = opts.requestTimeout\n\n  const self = this\n\n  this.success = function(res) {\n    self.data = res.data\n    self.onLoad()\n  }\n\n  this.fail = function(err) {\n    self.onError(err)\n  }\n\n  this.create()\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype)\n\nRequest.prototype.create = function() {\n  /**\n   * create http connect\n   */\n  wx.request({\n    url: this.uri,\n    method: this.method,\n    data: this.data,\n    success: this.success,\n    fail: this.fail,\n  })\n}\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function() {\n  this.emit('success')\n  this.cleanup()\n}\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function(data) {\n  this.emit('data', data)\n  this.onSuccess()\n}\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function(err) {\n  this.emit('error', err)\n  this.cleanup(true)\n}\n\nRequest.prototype.cleanup = function(fromError) {\n  this.data = null\n}\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function() {\n  this.onData(this.data)\n}\n","/**\n * Module dependencies.\n */\n\nvar transports = require('./transports/index')\nvar Emitter = require('component-emitter')\nvar debug = require('debug')('engine.io-client:socket')\nvar index = require('indexof')\nvar parser = require('engine.io-parser')\nvar parseuri = require('parseuri')\nvar parseqs = require('parseqs')\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket(uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts)\n\n  opts = opts || {}\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri\n    uri = null\n  }\n\n  if (uri) {\n    uri = parseuri(uri)\n    opts.hostname = uri.host\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss'\n    opts.port = uri.port\n    if (uri.query) opts.query = uri.query\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host\n  }\n\n  this.secure = opts.secure\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80'\n  }\n\n  this.agent = opts.agent || false\n  this.hostname = opts.hostname\n  this.port = opts.port\n  this.query = opts.query || {}\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query)\n  this.upgrade = false !== opts.upgrade\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/'\n  this.forceJSONP = !!opts.forceJSONP\n  this.jsonp = false !== opts.jsonp\n  this.forceBase64 = !!opts.forceBase64\n  this.enablesXDR = !!opts.enablesXDR\n  this.timestampParam = opts.timestampParam || 't'\n  this.timestampRequests = opts.timestampRequests\n  this.transports = opts.transports || ['polling', 'websocket']\n  this.transportOptions = opts.transportOptions || {}\n  this.readyState = ''\n  this.writeBuffer = []\n  this.prevBufferLen = 0\n  this.policyPort = opts.policyPort || 843\n  this.rememberUpgrade = opts.rememberUpgrade || false\n  this.binaryType = null\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades\n  this.perMessageDeflate =\n    false !== opts.perMessageDeflate ? opts.perMessageDeflate || {} : false\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {}\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null\n  this.key = opts.key || null\n  this.passphrase = opts.passphrase || null\n  this.cert = opts.cert || null\n  this.ca = opts.ca || null\n  this.ciphers = opts.ciphers || null\n  this.rejectUnauthorized =\n    opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized\n  this.forceNode = !!opts.forceNode\n\n  // set on handshake\n  this.id = null\n  this.upgrades = null\n  this.pingInterval = null\n  this.pingTimeout = null\n\n  // set on heartbeat\n  this.pingIntervalTimer = null\n  this.pingTimeoutTimer = null\n\n  this.open()\n}\n\nSocket.priorWebsocketSuccess = false\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype)\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket\nSocket.Transport = require('./transport')\nSocket.transports = require('./transports/index')\nSocket.parser = require('engine.io-parser')\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function(name) {\n  debug('creating transport \"%s\"', name)\n  var query = clone(this.query)\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol\n\n  // transport name\n  query.transport = name\n\n  // per-transport options\n  var options = this.transportOptions[name] || {}\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id\n\n  var transport = new transports[name]({\n    query: query,\n    socket: this,\n    agent: options.agent || this.agent,\n    hostname: options.hostname || this.hostname,\n    port: options.port || this.port,\n    secure: options.secure || this.secure,\n    path: options.path || this.path,\n    forceJSONP: options.forceJSONP || this.forceJSONP,\n    jsonp: options.jsonp || this.jsonp,\n    forceBase64: options.forceBase64 || this.forceBase64,\n    enablesXDR: options.enablesXDR || this.enablesXDR,\n    timestampRequests: options.timestampRequests || this.timestampRequests,\n    timestampParam: options.timestampParam || this.timestampParam,\n    policyPort: options.policyPort || this.policyPort,\n    pfx: options.pfx || this.pfx,\n    key: options.key || this.key,\n    passphrase: options.passphrase || this.passphrase,\n    cert: options.cert || this.cert,\n    ca: options.ca || this.ca,\n    ciphers: options.ciphers || this.ciphers,\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\n    extraHeaders: options.extraHeaders || this.extraHeaders,\n    forceNode: options.forceNode || this.forceNode,\n    localAddress: options.localAddress || this.localAddress,\n    requestTimeout: options.requestTimeout || this.requestTimeout,\n    protocols: options.protocols || void 0,\n  })\n\n  return transport\n}\n\nfunction clone(obj) {\n  var o = {}\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i]\n    }\n  }\n  return o\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function() {\n  var transport\n  if (\n    this.rememberUpgrade &&\n    Socket.priorWebsocketSuccess &&\n    this.transports.indexOf('websocket') !== -1\n  ) {\n    transport = 'websocket'\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this\n    setTimeout(function() {\n      self.emit('error', 'No transports available')\n    }, 0)\n    return\n  } else {\n    transport = this.transports[0]\n  }\n  this.readyState = 'opening'\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport)\n  } catch (e) {\n    this.transports.shift()\n    this.open()\n    return\n  }\n\n  transport.open()\n  this.setTransport(transport)\n}\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function(transport) {\n  debug('setting transport %s', transport.name)\n  var self = this\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name)\n    this.transport.removeAllListeners()\n  }\n\n  // set up transport\n  this.transport = transport\n\n  // set up transport listeners\n  transport\n    .on('drain', function() {\n      self.onDrain()\n    })\n    .on('packet', function(packet) {\n      self.onPacket(packet)\n    })\n    .on('error', function(e) {\n      self.onError(e)\n    })\n    .on('close', function() {\n      self.onClose('transport close')\n    })\n}\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function(name) {\n  debug('probing transport \"%s\"', name)\n  var transport = this.createTransport(name, { probe: 1 })\n  var failed = false\n  var self = this\n\n  Socket.priorWebsocketSuccess = false\n\n  function onTransportOpen() {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary =\n        !this.supportsBinary && self.transport.supportsBinary\n      failed = failed || upgradeLosesBinary\n    }\n    if (failed) return\n\n    debug('probe transport \"%s\" opened', name)\n    transport.send([{ type: 'ping', data: 'probe' }])\n    transport.once('packet', function(msg) {\n      if (failed) return\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name)\n        self.upgrading = true\n        self.emit('upgrading', transport)\n        if (!transport) return\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name\n\n        debug('pausing current transport \"%s\"', self.transport.name)\n        self.transport.pause(function() {\n          if (failed) return\n          if ('closed' === self.readyState) return\n          debug('changing transport and sending upgrade packet')\n\n          cleanup()\n\n          self.setTransport(transport)\n          transport.send([{ type: 'upgrade' }])\n          self.emit('upgrade', transport)\n          transport = null\n          self.upgrading = false\n          self.flush()\n        })\n      } else {\n        debug('probe transport \"%s\" failed', name)\n        var err = new Error('probe error')\n        err.transport = transport.name\n        self.emit('upgradeError', err)\n      }\n    })\n  }\n\n  function freezeTransport() {\n    if (failed) return\n\n    // Any callback called by transport should be ignored since now\n    failed = true\n\n    cleanup()\n\n    transport.close()\n    transport = null\n  }\n\n  // Handle any error that happens while probing\n  function onerror(err) {\n    var error = new Error('probe error: ' + err)\n    error.transport = transport.name\n\n    freezeTransport()\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err)\n\n    self.emit('upgradeError', error)\n  }\n\n  function onTransportClose() {\n    onerror('transport closed')\n  }\n\n  // When the socket is closed while we're probing\n  function onclose() {\n    onerror('socket closed')\n  }\n\n  // When the socket is upgraded while we're probing\n  function onupgrade(to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name)\n      freezeTransport()\n    }\n  }\n\n  // Remove all listeners on the transport and on self\n  function cleanup() {\n    transport.removeListener('open', onTransportOpen)\n    transport.removeListener('error', onerror)\n    transport.removeListener('close', onTransportClose)\n    self.removeListener('close', onclose)\n    self.removeListener('upgrading', onupgrade)\n  }\n\n  transport.once('open', onTransportOpen)\n  transport.once('error', onerror)\n  transport.once('close', onTransportClose)\n\n  this.once('close', onclose)\n  this.once('upgrading', onupgrade)\n\n  debug('probe transport: ', transport)\n  transport.open()\n}\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function() {\n  debug('socket open')\n  this.readyState = 'open'\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name\n  this.emit('open')\n  this.flush()\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes')\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i])\n    }\n  }\n}\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function(packet) {\n  if (\n    'opening' === this.readyState ||\n    'open' === this.readyState ||\n    'closing' === this.readyState\n  ) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data)\n\n    this.emit('packet', packet)\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat')\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(JSON.parse(packet.data))\n        break\n\n      case 'pong':\n        this.setPing()\n        this.emit('pong')\n        break\n\n      case 'error':\n        var err = new Error('server error')\n        err.code = packet.data\n        this.onError(err)\n        break\n\n      case 'message':\n        this.emit('data', packet.data)\n        this.emit('message', packet.data)\n        break\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState)\n  }\n}\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function(data) {\n  this.emit('handshake', data)\n  this.id = data.sid\n  this.transport.query.sid = data.sid\n  this.upgrades = this.filterUpgrades(data.upgrades)\n  this.pingInterval = data.pingInterval\n  this.pingTimeout = data.pingTimeout\n  this.onOpen()\n  // In case open handler closes socket\n  if ('closed' === this.readyState) return\n  this.setPing()\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat)\n  this.on('heartbeat', this.onHeartbeat)\n}\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function(timeout) {\n  clearTimeout(this.pingTimeoutTimer)\n  var self = this\n  self.pingTimeoutTimer = setTimeout(function() {\n    if ('closed' === self.readyState) return\n    self.onClose('ping timeout')\n  }, timeout || self.pingInterval + self.pingTimeout)\n}\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function() {\n  var self = this\n  clearTimeout(self.pingIntervalTimer)\n  self.pingIntervalTimer = setTimeout(function() {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout)\n    self.ping()\n    self.onHeartbeat(self.pingTimeout)\n  }, self.pingInterval)\n}\n\n/**\n * Sends a ping packet.\n *\n * @api private\n */\n\nSocket.prototype.ping = function() {\n  var self = this\n  this.sendPacket('ping', function() {\n    self.emit('ping')\n  })\n}\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function() {\n  this.writeBuffer.splice(0, this.prevBufferLen)\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain')\n  } else {\n    this.flush()\n  }\n}\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function() {\n  if (\n    'closed' !== this.readyState &&\n    this.transport.writable &&\n    !this.upgrading &&\n    this.writeBuffer.length\n  ) {\n    debug('flushing %d packets in socket', this.writeBuffer.length)\n    this.transport.send(this.writeBuffer)\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length\n    this.emit('flush')\n  }\n}\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write = Socket.prototype.send = function(msg, options, fn) {\n  this.sendPacket('message', msg, options, fn)\n  return this\n}\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function(type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data\n    data = undefined\n  }\n\n  if ('function' === typeof options) {\n    fn = options\n    options = null\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return\n  }\n\n  options = options || {}\n  options.compress = false !== options.compress\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options,\n  }\n  this.emit('packetCreate', packet)\n  this.writeBuffer.push(packet)\n  if (fn) this.once('flush', fn)\n  this.flush()\n}\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function() {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing'\n\n    var self = this\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function() {\n        if (this.upgrading) {\n          waitForUpgrade()\n        } else {\n          close()\n        }\n      })\n    } else if (this.upgrading) {\n      waitForUpgrade()\n    } else {\n      close()\n    }\n  }\n\n  function close() {\n    self.onClose('forced close')\n    debug('socket closing - telling transport to close')\n    self.transport.close()\n  }\n\n  function cleanupAndClose() {\n    self.removeListener('upgrade', cleanupAndClose)\n    self.removeListener('upgradeError', cleanupAndClose)\n    close()\n  }\n\n  function waitForUpgrade() {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose)\n    self.once('upgradeError', cleanupAndClose)\n  }\n\n  return this\n}\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function(err) {\n  debug('socket error %j', err)\n  Socket.priorWebsocketSuccess = false\n  this.emit('error', err)\n  this.onClose('transport error', err)\n}\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function(reason, desc) {\n  if (\n    'opening' === this.readyState ||\n    'open' === this.readyState ||\n    'closing' === this.readyState\n  ) {\n    debug('socket close with reason: \"%s\"', reason)\n    var self = this\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer)\n    clearTimeout(this.pingTimeoutTimer)\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close')\n\n    // ensure transport won't stay open\n    this.transport.close()\n\n    // ignore further transport communication\n    this.transport.removeAllListeners()\n\n    // set ready state\n    this.readyState = 'closed'\n\n    // clear session id\n    this.id = null\n\n    // emit close event\n    this.emit('close', reason, desc)\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = []\n    self.prevBufferLen = 0\n  }\n}\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function(upgrades) {\n  var filteredUpgrades = []\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i])\n  }\n  return filteredUpgrades\n}\n","module.exports = require('./socket')\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = require('engine.io-parser')\n","/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof global.Blob === 'function' || toString.call(global.Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof global.File === 'function' || toString.call(global.File) === '[object FileConstructor]';\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet) {\n  var buffers = [];\n  var packetData = packet.data;\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (isBuf(data)) {\n    var placeholder = { _placeholder: true, num: buffers.length };\n    buffers.push(data);\n    return placeholder;\n  } else if (isArray(data)) {\n    var newData = new Array(data.length);\n    for (var i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n    return newData;\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\n    var newData = {};\n    for (var key in data) {\n      newData[key] = _deconstructPacket(data[key], buffers);\n    }\n    return newData;\n  }\n  return data;\n}\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (data && data._placeholder) {\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n  } else if (isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (typeof data === 'object') {\n    for (var key in data) {\n      data[key] = _reconstructPacket(data[key], buffers);\n    }\n  }\n\n  return data;\n}\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n","/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\r\n\r\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\nvar parts = [\r\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n];\r\n\r\nmodule.exports = function parseuri(str) {\r\n    var src = str,\r\n        b = str.indexOf('['),\r\n        e = str.indexOf(']');\r\n\r\n    if (b != -1 && e != -1) {\r\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n    }\r\n\r\n    var m = re.exec(str || ''),\r\n        uri = {},\r\n        i = 14;\r\n\r\n    while (i--) {\r\n        uri[parts[i]] = m[i] || '';\r\n    }\r\n\r\n    if (b != -1 && e != -1) {\r\n        uri.source = src;\r\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n        uri.ipv6uri = true;\r\n    }\r\n\r\n    return uri;\r\n};\r\n","\n/**\n * Module dependencies.\n */\n\nvar parseuri = require('parseuri');\nvar debug = require('debug')('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url (uri, loc) {\n  var obj = uri;\n\n  // default to window.location\n  loc = loc || global.location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n","\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup (uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  }\n  return io.socket(parsed.path, opts);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');\n"],"sourceRoot":""}