<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fantj.sbmybatis.mapper.ItemMapper">
  <resultMap id="BaseResultMap" type="com.fantj.sbmybatis.model.Item">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="img_url" jdbcType="VARCHAR" property="imgUrl" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="notes" jdbcType="VARCHAR" property="notes" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="seller" jdbcType="INTEGER" property="seller" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, img_url, price, notes, address, seller, status
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from items
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from items
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.fantj.sbmybatis.model.Item" useGeneratedKeys="true" keyProperty="id">
    insert into items (name, img_url,
      price, notes, address, 
      seller, status)
    values (#{name,jdbcType=VARCHAR}, #{imgUrl,jdbcType=VARCHAR},
      #{price,jdbcType=INTEGER}, #{notes,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{seller,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR})
  </insert>

  <insert id="insertSelective" parameterType="com.fantj.sbmybatis.model.Item">
    insert into items
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="imgUrl != null">
        img_url,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="notes != null">
        notes,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="seller != null">
        seller,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="imgUrl != null">
        #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="notes != null">
        #{notes,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="seller != null">
        #{seller,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.fantj.sbmybatis.model.Item">
    update items
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="imgUrl != null">
        img_url = #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="notes != null">
        notes = #{notes,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="seller != null">
        seller = #{seller,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.fantj.sbmybatis.model.Item">
    update items
    set name = #{name,jdbcType=VARCHAR},
      img_url = #{imgUrl,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      notes = #{notes,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      seller = #{seller,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>